plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'pl.kkozera'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(24)
	}
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation("org.springframework.boot:spring-boot-starter-jdbc")
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation("org.springframework.boot:spring-boot-starter-validation")
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation("org.postgresql:postgresql:42.5.0")
	implementation 'org.liquibase:liquibase-core'
	implementation("org.mapstruct:mapstruct:1.5.5.Final")
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor("org.mapstruct:mapstruct-processor:1.5.5.Final")
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("org.testcontainers:junit-jupiter")
	testImplementation("org.testcontainers:postgresql")
	testImplementation('org.wiremock:wiremock-jetty12:3.13.0')
	testImplementation("org.springframework.boot:spring-boot-testcontainers")
}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
	integrationTest {
		java {
			srcDir 'src/integration-test/java'
		}
		resources {
			srcDir 'src/integration-test/resources'
		}

		compileClasspath += sourceSets.main.output + sourceSets.test.output
		runtimeClasspath += sourceSets.main.output + sourceSets.test.output
	}
}

tasks.register('integrationTest', Test) {
	useJUnitPlatform()
	description = 'Runs integration tests.'
	group = 'verification'
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	shouldRunAfter test
}

check.dependsOn integrationTest
